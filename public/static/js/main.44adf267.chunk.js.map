{"version":3,"sources":["api/emptySplitApi.js","containers/Login/loginSlice.js","containers/ViewEdit/viewEditSlice.js","components/Navibar/navibarSlice.js","components/AssetCard/assetCardSlice.js","components/AccessoryCard/accessoryCardSlice.js","components/StaffCard/staffCardSlice.js","components/LocationCard/locationCardSlice.js","store.js","components/Navibar/Navibar.js","components/SuggestBox/useRoveFocus.js","components/SuggestBox/ListItem.js","components/SuggestBox/SuggestBox.js","components/TextInput/TextInput.js","api/apiAssetSlice.js","pages/AddNewAsset.js","api/apiStaffSlice.js","pages/AddNewStaff.js","pages/AddNewAccessory.js","utils/utils.js","api/apiCabinetsSlice.js","pages/AddNewCabinet.js","api/apiShelvesSlice.js","pages/AddNewShelf.js","containers/Add.js","components/ViewEditField/ViewEditField.js","api/apiLocationsSlice.js","api/apiTransfersSlice.js","components/AssetTransferForm/AssetTransferForm.js","components/AssetCard/AssetCard.js","components/AssetMovementTable/AssetMovementTable.js","components/AssetTypeList/AssetTypeList.js","pages/ViewEditAsset.js","components/AssetList/AssetList.js","components/LocationAccessoryList/LocationAccessoryList.js","components/LocationCard/LocationCard.js","pages/ViewEditLocation.js","components/StaffCard/StaffCard.js","pages/ViewEditStaff.js","api/apiAccessoriesSlice.js","components/AccessoryList/AccessoryList.js","components/AccessoryMovementTable/AccessoryMovementTable.js","components/AccessoryCard/AccessoryCard.js","pages/ViewAllAccessories.js","containers/ViewEdit/ViewEdit.js","pages/Reports.js","containers/App.js","reportWebVitals.js","index.js"],"names":["emptySplitApi","createApi","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","slice","createSlice","name","initialState","user","reducers","setUser","state","action","payload","actions","page","setViewEditPage","selectViewEditPage","viewedit","value","setRoute","selectRoute","route","serial","setAsset","accId","setAccessory","staffId","setStaffId","locationId","setLocationId","configureStore","reducer","loginReducer","viewEditReducer","navibarReducer","asset","assetCardReducer","accessory","accessoryCardReducer","staff","staffCardReducer","locations","locationCardReducer","suggestlists","suggestListReducer","reducerPath","middleware","getDefaultMiddleware","concat","Navibar","onRouteChange","dispatch","useDispatch","useSelector","className","onClick","useRoveFocus","size","useState","currentFocus","setCurrentFocus","handleKeyDown","useCallback","event","keyCode","preventDefault","useEffect","document","addEventListener","removeEventListener","ListItem","focus","index","handleSelect","setFocus","itemRef","useRef","current","tabIndex","ref","onKeyPress","key","SuggestBox","initial_input","label","suggestlist","addNewEnabled","handleInputChange","suggestOpen","setSuggestOpen","filteredList","setFilteredList","Array","isArray","shortlist","inputValue","setInputValue","undefined","length","inputEl","useLayoutEffect","onBodyClick","contains","target","body","innerHTML","type","autoComplete","onChange","filtered","filter","suggest","toLowerCase","includes","onKeyDown","console","log","style","right","top","map","item","TextInput","title","required","assetsApi","injectEndpoints","builder","getAssets","query","getTypeAssets","asset_type","getAssetLists","providesTags","getOneAsset","serialnumber","addAsset","mutation","assetData","url","method","invalidatesTags","editAsset","editData","useGetTypeAssetsQuery","useGetAssetsQuery","useGetAssetListsQuery","useGetOneAssetQuery","useAddAssetMutation","useEditAssetMutation","ASSET_TYPES","AddNewAsset","Date","transfer_date","setTransferDate","setAssetType","make","setMake","model","setModel","asset_condition","setCondition","setSerialNumber","imei","setImei","description","setDescription","assetlists","data","isSuccess","onSubmitAddNewAsset","a","postData","unwrap","error","alert","selected","date","input_value","makeList","modelList","conditionList","staffApi","getStaffLists","getOneStaff","staff_id","addStaff","staffData","editStaff","useGetStaffListsQuery","useGetOneStaffQuery","useAddStaffMutation","useEditStaffMutation","AddNewStorageLocation","staffCodeId","setStaffCodeId","firstname","setFirstName","lastname","setLastName","email","setEmail","password","setPassword","stafflists","onSubmitNewStaff","substring","unusedIds","AddNewAccessory","accType","setAccType","addAccessorry","onSubmitAddAccessory","accessory_type","acc","typeList","DateFormatter","month","getMonth","getDate","getFullYear","formatId","idNumber","code","padding","toString","padStart","cabinetsApi","getCabinetLists","addCabinet","cabinetData","useGetCabinetListsQuery","useAddCabinetMutation","AddNewCabinet","storageID","setStorageID","storageLocation","setStorageLocation","storageDescription","setStorageDescription","cabinetlists","formattedIds","useMemo","id","cabinet_id","located","locatedList","shelvesApi","getShelfLists","addShelf","shelfData","useGetShelfListsQuery","useAddShelfMutation","shelflists","shelf_id","Add","addValue","setAddValue","addList","addType","AddNewShelf","AddNewStaff","returnAddType","ViewEditField","input_type","data_field","handleEdit","editOpen","setEditOpen","editValue","setEditValue","onSubmitEdit","href","locationsApi","getAllLocations","getLocationLists","getOneLocation","location_id","useGetAllLocationsQuery","useGetLocationListsQuery","useGetOneLocationQuery","transfersApi","getAssetTransfers","addAssetTransfer","transferData","useGetAssetTransfersQuery","useAddAssetTransferMutation","AssetTransferForm","asset_id","close_transfer","locationListObj","setLocationListObj","transferTo","setTransferTo","transferDate","LocationSelectorListObj","forEach","location","selectorValue","location_type_id","location_type","paddedID","toUpperCase","parsedLocationId","location_detail","onCaptureTransfer","addTransfer","Object","keys","AssetCard","getStockItemDetails","update","setUpdate","moveOpen","setMoveOpen","serial_number","refetch","editvalue","detail","AssetMovementTable","deleteMovement","transferslist","cellSpacing","transfer","i","parsedTransferDate","parsedCaptureDate","capture_time","substr","onRowClick","AssetTypeList","set_serial","assets","ViewEditAsset","assetType","serialList","setSerialList","selectAssetType","movement_id","AssetList","asset_list","LocationAccessoryList","accessory_list","acc_id","accessory_id","parsedid","pointerEvents","LocationCard","parsed_id","locationData","accessories","ViewEditLocation","setFilteredLocations","locationList","StaffCard","staffMember","edit","ViewEditStaff","staffList","staffmember","accessoriesApi","getAccessories","getOneAccessory","accid","editAccessory","useGetAccessoriesQuery","useGetOneAccessoryQuery","useEditAccessoryMutation","AccessoryList","AccessoryMovementTable","movements","AccessoriesCard","transfers","ViewAllAccessories","AccessoryCard","ViewEdit","viewEditValue","view_edit_type","returnViewEditType","reports","App","Reports","returnRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.44adf267.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst API_URL = 'https://localhost:5000/v1';\r\n\r\nexport const emptySplitApi = createApi({\r\n  baseQuery: fetchBaseQuery({ baseUrl: API_URL}),\r\n  tagTypes: [\r\n      'Assets', \r\n      'Asset', \r\n      'Accessories',\r\n      'Accessory',\r\n      'Cabinets',\r\n      'Location',\r\n      'Locations',\r\n      'Locationlists',\r\n      'Onestaff',\r\n      'Shelves', \r\n      'Staff', \r\n      'Transfers', \r\n    ],\r\n  endpoints: () => ({}),\r\n})\r\n\r\nexport default emptySplitApi;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n\tuser: {}\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'app',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetUser: (state, action) => {\r\n\t\t\tstate.user = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setUser } = slice.actions;\r\n\r\nexport const selectUser = state => state.app.user;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n\tpage: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'viewedit',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetViewEditPage: (state, action) => {\r\n\t\t\tstate.page = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setViewEditPage } = slice.actions;\r\n\r\nexport const selectViewEditPage = state => state.viewedit.page;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\n// State value is string indicating which view to be displayed\r\nconst initialState = {\r\n\tvalue: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'navibar',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetRoute: (state, action) => {\r\n\t\t\tstate.value = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setRoute } = slice.actions;\r\n\r\nexport const selectRoute = state => state.route.value;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\n// State value is string indicating which view to be displayed\r\nconst initialState = {\r\n\tserial: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'asset',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetAsset: (state, action) => {\r\n\t\t\tstate.serial = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAsset } = slice.actions;\r\n\r\nexport const selectAsset = state => state.asset.serial;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n\taccId: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'accessory',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetAccessory: (state, action) => {\r\n\t\t\tstate.accId = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setAccessory } = slice.actions;\r\n\r\nexport const selectAccessory = state => state.asset.value;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\n// State value is string indicating which view to be displayed\r\nconst initialState = {\r\n\tstaffId: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'staff',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetStaffId: (state, action) => {\r\n\t\t\tstate.staffId = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setStaffId } = slice.actions;\r\n\r\nexport const selectStaffId = state => state.asset.value;\r\n\r\nexport default slice.reducer;","import { createSlice } from  '@reduxjs/toolkit'\r\n\r\n// State value is string indicating which view to be displayed\r\nconst initialState = {\r\n\tlocationId: ''\r\n}\r\n\r\nexport const slice = createSlice({\r\n\tname: 'locations',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetLocationId: (state, action) => {\r\n\t\t\tstate.locationId = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setLocationId } = slice.actions;\r\n\r\nexport const selectLocationId = state => state.asset.value;\r\n\r\nexport default slice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { emptySplitApi } from './api/emptySplitApi';\r\n\r\nimport loginReducer from './containers/Login/loginSlice';\r\nimport viewEditReducer from './containers/ViewEdit/viewEditSlice';\r\nimport navibarReducer from './components/Navibar/navibarSlice';\r\nimport assetCardReducer from './components/AssetCard/assetCardSlice';\r\nimport accessoryCardReducer from './components/AccessoryCard/accessoryCardSlice';\r\nimport staffCardReducer from './components/StaffCard/staffCardSlice';\r\nimport locationCardReducer from './components/LocationCard/locationCardSlice.js';\r\nimport suggestListReducer from './components/SuggestBox/suggestBoxSlice';\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: loginReducer,\r\n    viewedit: viewEditReducer,\r\n    route: navibarReducer,\r\n    asset: assetCardReducer,\r\n    accessory: accessoryCardReducer,\r\n    staff: staffCardReducer,\r\n    locations: locationCardReducer,\r\n    suggestlists: suggestListReducer,\r\n    [emptySplitApi.reducerPath]: emptySplitApi.reducer\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware().concat(emptySplitApi.middleware)\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRoute, selectRoute } from './navibarSlice';\r\n\r\nconst Navibar = ({onRouteChange}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst route = useSelector(selectRoute);\r\n\r\n\treturn (\r\n\t\t<nav className=\"pa2 pa2-ns mw1 mw6-ns center bb\">\r\n\t\t    <h1 className=\"tc\">\r\n        \t\tAlbatros Asset Tracking\r\n      \t\t</h1>\r\n\t\t  <div className=\"tc pb1\">\r\n\t\t    <p onClick={() => dispatch(setRoute('add'))} className={`link dim gray f6 f5-ns dib mr3 pointer ${route === 'add' ? 'b' : ''}`}>Add</p>\r\n\t\t    <p onClick={() => dispatch(setRoute('view_edit'))} className={`link dim gray f6 f5-ns dib mr3 pointer ${route === 'view_edit' ? 'b' : ''}`}>View/Edit</p>\r\n\t\t    <p onClick={() => dispatch(setRoute('reports'))} className={`link dim gray f6 f5-ns dib mr3 pointer ${route === 'reports' ? 'b' : ''}`}>Reports</p>\r\n\t\t  </div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Navibar","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nfunction useRoveFocus(size) {\r\n    // Custom hook used to change list item focus using keyboard arrows\r\n    const [currentFocus, setCurrentFocus] = useState(-1);\r\n\r\n    const handleKeyDown = useCallback(event => {\r\n        if (event.keyCode === 40) {\r\n          // Up Arrow\r\n          event.preventDefault();\r\n          setCurrentFocus(currentFocus === size -1 ? 0 : currentFocus + 1)\r\n        } else if (event.keyCode === 38) {\r\n          //Down Arrow\r\n          event.preventDefault();\r\n          setCurrentFocus(currentFocus === 0 ? size - 1 : currentFocus - 1)\r\n        }\r\n      },\r\n      [size, currentFocus, setCurrentFocus]\r\n    );\r\n\r\n    useEffect(() => {\r\n      document.addEventListener(\"keydown\", handleKeyDown, false)\r\n      return () => {\r\n        document.removeEventListener(\"keydown\", handleKeyDown, false)\r\n      };\r\n    },[handleKeyDown]);\r\n\r\n    return [ currentFocus, setCurrentFocus];\r\n  }\r\n\r\n  export default useRoveFocus","import { useRef, useEffect } from 'react';\r\n\r\nconst ListItem = ({ value, focus, index, setFocus, handleSelect }) => {\r\n\tconst itemRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (focus) {\r\n\t\t\t// Focus on this element if its index is equal to focus value as set in paramaters \r\n\t\t\titemRef.current.focus();\r\n\t\t}\r\n\t}, [focus]);\r\n\r\n\tconst handleKeyPres = (event) => {\r\n\t\tif (event.key === \"Enter\") {\r\n\t\t\thandleSelect(event)\r\n\t\t}\r\n\t};\r\n\r\n\treturn(\r\n \t\t<li \r\n \t\t\t// set value as index to set focus on this element when selected using handleselect\r\n \t\t\tvalue={index}\r\n\t \t\tclassName=\"hover-bg-gray pointer\" \r\n\t \t\ttabIndex={focus ? 0 : -1}\r\n\t \t\tref={itemRef}\r\n\t \t\tonClick={handleSelect}\r\n\t \t\tonKeyPress={handleKeyPres}\r\n \t\t>{value}</li>\r\n\t)\r\n}\r\n\r\nexport default ListItem","import { useState, useRef, useLayoutEffect, useEffect } from 'react';\r\nimport useRoveFocus from \"./useRoveFocus\";\r\nimport ListItem from \"./ListItem\"\r\n\r\n// Suggestbox accepts a array of values as suggeslist to show in dropdown\r\n// Initial input may be provided to set initial text box value\r\n// function must be provided to for changing value that will be captured\r\nconst SuggestBox = ({initial_input, label, suggestlist, addNewEnabled, handleInputChange}) => {\r\n\tconst [suggestOpen, setSuggestOpen] = useState(false)\r\n\tconst [filteredList, setFilteredList] = useState(['']);\r\n\r\n\t// Set filteredList value to first 10 values of suggestlist provided\r\n\tuseEffect(() => {\r\n    \tif (Array.isArray(suggestlist)) {\r\n    \t\tconst shortlist = suggestlist.slice(0,10)\r\n    \t\tsetFilteredList(shortlist)\r\n    \t} else {\r\n    \t\tsetFilteredList([])\r\n    \t}\r\n    }, [suggestlist]);\r\n\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\tuseEffect(() => {\r\n    // If initial_input is provides, set inputValue\r\n   \t\tif(initial_input !== undefined) {\r\n    \t\tsetInputValue(initial_input)\r\n    \t}\r\n    }, [initial_input]);\r\n\r\n\t// Set/Change list item focus using arrow keys or during events\r\n\tconst [focus, setFocus] = useRoveFocus(filteredList.length)\r\n\r\n    // Ref added to input to enable closing suggestbox when user clicks outside this div\r\n\tconst inputEl = useRef(null)\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\t// Add Event listener to body to close suggestbox when clicked\r\n\t\tconst onBodyClick = event => {\r\n\t\t\tif(inputEl.current.contains(event.target)) {\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\tsetSuggestOpen(false)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.body.addEventListener(\"click\", onBodyClick)\r\n\t\t// Cleanup = Remove event listener \r\n\t\treturn () => {\r\n\t\t\tdocument.body.removeEventListener(\"click\", onBodyClick)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst toggleSuggest = (event) => {\r\n\t\tif(suggestOpen) {\r\n\t\t\tsetSuggestOpen(false)\r\n\t\t\tsetFocus(-1)\r\n\t\t} else {\r\n\t\t\tsetSuggestOpen(true)\r\n\t\t\tsetFocus(-1)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleInput = (event) => {\r\n\t\tsetInputValue(event.target.value)\r\n\t\thandleInputChange(''); \r\n\t\tsetSuggestOpen(true)\r\n\t\tif (event.target.value && Array.isArray(suggestlist)) {\r\n\t\t\tconst filtered = suggestlist.filter(suggest => {\r\n\t\t\t\tif(typeof suggest === 'string') {\r\n\t\t\t\t\treturn suggest.toLowerCase().includes(event.target.value.toLowerCase());\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetFilteredList(filtered.slice(0,10))\r\n\t\t} else if (Array.isArray(suggestlist)) {\r\n\t\t\tsetFilteredList(suggestlist.slice(0,10));\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSelect = (event) => {\r\n\t\tsetInputValue(event.target.innerHTML);\r\n\t\thandleInputChange(event.target.innerHTML);\r\n\t\t// setFilteredList(suggestlist.slice(0,10));\r\n\t\tsetSuggestOpen(false);\r\n\t\tsetFocus(event.target.value)\r\n\t\t}\r\n\r\n\tconst handleAddNew = event => {\r\n\t\thandleInputChange(inputValue)\r\n\t\tsetSuggestOpen(false);\r\n\t\tsetFilteredList([])\r\n\t}\r\n\r\n\tconst handleKeyPress = (event) => {\r\n\t\t// Incomplete\r\n\t\tif(event.key === 'ArrowDown') {\r\n\t\t\tsetSuggestOpen(true);\r\n\t\t} else if(event.key === 'Enter' ) {\r\n\t\t\t// Add function to select entered value if in list when enter is pressed\r\n\t\t\tconsole.log('Enter')\r\n\t\t} else {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t<div ref={inputEl}>\r\n\t\t{ Array.isArray(filteredList) ?\r\n\t\t\t<div className=\"relative pv1 flex items-center\">\r\n\t\t\t\t<label className=\"dib w4 pr5 mv2\">{label} </label>\r\n\t\t\t\t<div className=\"dib \" >\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"pr5 h2 pv0\"\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\tonClick={toggleSuggest}\r\n\t\t\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t{/*Add x to clear field. Currently set to dn (display:none)*/}\r\n\t\t\t\t\t\t<span className=\"dn absolute link pointer fw6 bold link dim\" style={{right:\"45px\", top:\"5px\"}}>x</span>\r\n\t\t\t\t\t{suggestOpen ?\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t \t<ul className=\"absolute w5 bg-white list ml0 mt0 pa1 center ba overflow z-max\">\r\n\t\t\t\t\t\t\t \t{filteredList.map((item, index) => {\r\n\t\t\t\t\t\t\t \t\treturn(\r\n\t\t\t\t\t\t\t \t\t\t<ListItem\r\n\t\t\t\t\t\t\t \t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t \t\t\t\tsetFocus={setFocus}\r\n\t\t\t\t\t\t\t \t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t \t\t\t\tfocus={focus === index}\r\n\t\t\t\t\t\t\t \t\t\t\tvalue={item}\r\n\t\t\t\t\t\t\t \t\t\t\thandleSelect={handleSelect}\r\n\t\t\t\t\t\t\t \t\t\t/>\r\n\t\t\t\t\t\t\t \t\t)\r\n\r\n\t\t\t\t\t\t\t \t})}\r\n\t\t\t\t\t\t\t \t{!filteredList.length && addNewEnabled ?\r\n\t\t\t\t\t\t\t\t \t<p onClick={handleAddNew} className=\"f6 link underline  b mv1 pointer\">New {label}</p>\r\n\t\t\t\t\t\t\t\t \t: !filteredList.length ?\r\n\t\t\t\t\t\t\t\t \t\t<div className='b f6'>Invalid {label}</div>\r\n\t\t\t\t\t\t\t\t \t\t:\r\n\t\t\t\t\t\t\t\t \t\t<div></div>\r\n\t\t\t\t\t\t\t \t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div>Suggestlist not in correct Format</div>\r\n\t\t}\r\n\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default SuggestBox;","const TextInput = ({label, handleInputChange, value}) => {\r\n\treturn (\r\n\t\t<div className=\"pv1 flex items-center\">\r\n\t\t\t<label className=\"dib w4 pr5 mv2\"> {label} </label>\r\n\t\t\t<div className=\"dib\">\r\n\t\t\t\t<input \r\n\t\t\t\t\tclassName=\"pr5 pb0 h2\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\trequired \r\n\t\t\t\t\tonChange={handleInputChange}/> \r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default TextInput","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst assetsApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetAssets: builder.query({\r\n\t\t\tquery: () => '/assets/all'\r\n\t\t}),\r\n\t\tgetTypeAssets: builder.query({\r\n\t\t\tquery: (asset_type) => `/assets/alltype/${asset_type}`\r\n\t\t}),\r\n\t\tgetAssetLists: builder.query({\r\n\t\t\tquery: () => '/assets/assetlists',\r\n\t\t\tprovidesTags: ['Assets']\r\n\t\t}),\r\n\t\tgetOneAsset: builder.query({\r\n\t\t\tquery: (serialnumber) => `/assets/asset/${serialnumber}`,\r\n\t\t\tprovidesTags: ['Asset']\r\n\t\t}),\r\n\t\taddAsset: builder.mutation({\r\n\t\t\tquery: assetData => ({\r\n\t\t\t\turl: '/assets/add',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: assetData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Assets']\r\n\t\t}),\r\n\t\teditAsset: builder.mutation({\r\n\t\t\tquery: editData => ({\r\n\t\t\t\turl: '/assets/edit',\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: editData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Asset']\r\n\t\t})\r\n\t})\r\n});\r\n\r\nexport const { \r\n\tuseGetAssetsQuery, \r\n\tuseGetTypeAssetsQuery,\r\n\tuseGetAssetListsQuery,\r\n\tuseGetOneAssetQuery,\r\n\tuseAddAssetMutation,\r\n\tuseEditAssetMutation \r\n} = assetsApi;","import React, { useState} from 'react';\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport TextInput from '../components/TextInput/TextInput';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { \r\n\tuseAddAssetMutation,\r\n\tuseGetAssetListsQuery,\r\n\t } \r\n\t from '../api/apiAssetSlice';\r\n\r\nconst ASSET_TYPES = ['Laptop', 'Monitor', 'Modem', 'Cellphone' , 'PC', 'Tablet', 'Misc']\r\n\r\nconst AddNewAsset = () => {\r\n\tconst [transfer_date, setTransferDate] = useState(new Date());\r\n\tconst [asset_type, setAssetType] = useState('');\r\n\tconst [make, setMake] = useState('');\r\n\tconst [model, setModel] = useState('');\r\n\tconst [asset_condition, setCondition] = useState('');\r\n\tconst [serialnumber, setSerialNumber] = useState('');\r\n\tconst [imei, setImei] = useState('');\r\n\tconst [description, setDescription] = useState('')\r\n\r\n\tconst {data: assetlists, isSuccess} = useGetAssetListsQuery();\r\n\tconst [addAsset] = useAddAssetMutation();\r\n\r\n\tconst onSubmitAddNewAsset = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst postData = {\r\n\t\t\tasset_type: asset_type.toLowerCase(),\r\n\t\t\tasset: {\r\n\t\t\t\tserialnumber,\r\n\t\t\t\tmake,\r\n\t\t\t\tmodel,\r\n\t\t\t\tasset_condition,\r\n\t\t\t},\r\n\t\t\ttransfer_date,\r\n\t\t}\r\n\r\n\t\t// add imei to post data if modem of cellphone\r\n\t\tif(imei) {\r\n\t\t\tpostData.asset.imei = imei\r\n\t\t}\r\n\r\n\t\t// add description for misc assets\r\n\t\tif(description) {\r\n\t\t\tpostData.asset.description = description\r\n\t\t}\r\n\r\n\t\tawait addAsset(postData).unwrap();\r\n\t\tif(addAsset.error) {\r\n\t\t\talert('Could not add asset. Check Data');\r\n\t\t} else {\r\n\t\t\talert('Asset added');\r\n\t\t\tsetTransferDate('');\r\n\t\t\tsetAssetType('');\r\n\t\t\tsetMake('');\r\n\t\t\tsetModel('');\r\n\t\t\tsetCondition('');\r\n\t\t\tsetSerialNumber('');\r\n\t\t\tsetImei('');\r\n\t\t\tsetDescription('');\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"pt2\">\r\n\t\t\t{!isSuccess\r\n\t\t\t\t ? \r\n\t\t\t\t \t<h1> LOADING </h1>\r\n\t\t\t\t :\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t<label className=\"dib w4 pr5 mv2\"> Date Received: </label>\r\n\t\t\t\t\t\t\t\t<div className=\"dib\">\r\n\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\tselected={transfer_date} \r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => setTransferDate(date)} /><br/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Asset Type:\"\r\n\t\t\t\t\t\t\tinitial_input={asset_type}\r\n\t\t\t\t\t\t\tsuggestlist={ASSET_TYPES} \r\n\t\t\t\t\t\t\taddNewEnabled={true}\r\n\t\t\t\t\t\t\thandleInputChange={input_value => setAssetType(input_value.toLowerCase())}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{(asset_type === 'misc') &&\r\n\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\tlabel=\"Description\"\r\n\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\thandleInputChange={event => setDescription(event.target.value)}\r\n\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Make:\"\r\n\t\t\t\t\t\t\tinitial_input={make} \r\n\t\t\t\t\t\t\tsuggestlist={assetlists[asset_type]?.makeList}\r\n\t\t\t\t\t\t\taddNewEnabled={true} \r\n\t\t\t\t\t\t\thandleInputChange={input_value => setMake(input_value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Model:\"\r\n\t\t\t\t\t\t\tinitial_input={model} \r\n\t\t\t\t\t\t\tsuggestlist={assetlists[asset_type]?.modelList} \r\n\t\t\t\t\t\t\taddNewEnabled={true} \r\n\t\t\t\t\t\t\thandleInputChange={input_value => setModel(input_value)}\r\n\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Condition:\"\r\n\t\t\t\t\t\t\tinitial_input={asset_condition} \r\n\t\t\t\t\t\t\tsuggestlist={assetlists[asset_type]?.conditionList} \r\n\t\t\t\t\t\t\taddNewEnabled={true} \r\n\t\t\t\t\t\t\thandleInputChange={input_value => setCondition(input_value)}\r\n\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tlabel=\"Serial Number:\"\r\n\t\t\t\t\t\t\tvalue={serialnumber}\r\n\t\t\t\t\t\t\thandleInputChange={event => setSerialNumber(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{(asset_type === 'cellphone' || asset_type === 'modem') &&\r\n\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\tlabel=\"IMEI\"\r\n\t\t\t\t\t\t\t\tvalue={imei}\r\n\t\t\t\t\t\t\t\thandleInputChange={event => setImei(event.target.value)}\r\n\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{/*Conditionally render submit button only if fields specified have been filled*/}\r\n\t\t\t\t\t\t{ asset_type && transfer_date && make && model && serialnumber && asset_condition &&\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\t\tvalue=\"Submit\" \r\n\t\t\t\t\t\t\t\tonClick={onSubmitAddNewAsset}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t: <div></div>\r\n\t\t\t\t\t</form>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n} \r\n\r\nexport default AddNewAsset","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst staffApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetStaffLists: builder.query({\r\n\t\t\tquery: () => '/staff/stafflists',\r\n\t\t\tprovidesTags: ['Staff']\r\n\t\t}),\r\n\t\tgetOneStaff: builder.query({\r\n\t\t\tquery: (staff_id) => `/staff/one/${staff_id}`,\r\n\t\t\tprovidesTags: ['Onestaff']\r\n\t\t}),\r\n\t\taddStaff: builder.mutation({\r\n\t\t\tquery: staffData => ({\r\n\t\t\t\turl: '/staff/add',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: staffData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Staff']\r\n\t\t}),\r\n\t\teditStaff: builder.mutation({\r\n\t\t\tquery: editData => ({\r\n\t\t\t\turl: '/staff/edit',\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: editData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Onestaff', 'Staff']\r\n\t\t})\r\n\t})\r\n})\r\n\r\nexport const { \r\n\tuseGetStaffListsQuery, \r\n\tuseGetOneStaffQuery, \r\n\tuseAddStaffMutation, \r\n\tuseEditStaffMutation \r\n} = staffApi;","import React, { useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setRoute } from '../components/Navibar/navibarSlice';\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport TextInput from '../components/TextInput/TextInput';\r\n\r\nimport {\r\n\tuseGetStaffListsQuery,\r\n\tuseAddStaffMutation\r\n} from '../api/apiStaffSlice'\r\n\r\nconst AddNewStorageLocation = () => {\r\n\tconst [staffCodeId, setStaffCodeId] = useState('');\r\n\tconst [firstname, setFirstName] = useState('');\r\n\tconst [lastname, setLastName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst {data: stafflists, isSuccess }  = useGetStaffListsQuery();\r\n\r\n\tconst [addStaff] = useAddStaffMutation();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmitNewStaff = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\t//Extract only number id from staff code\r\n\t\tconst staff_id = staffCodeId.substring(5);\r\n\r\n\t\tconst postData = {\r\n\t\t\tstaff_id,\r\n\t\t\tfirstname,\r\n\t\t\tlastname,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait addStaff(postData).unwrap();\r\n\t\t\talert('Staff Added');\r\n\t\t\tdispatch(setRoute(''));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\r\nreturn (\r\n\t<div>\t\r\n\t\t<form>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Staff ID:\"\r\n\t\t\t\tsuggestlist= {isSuccess ? stafflists.unusedIds : ['loading']}\r\n\t\t\t\taddNewEnabled={false}\r\n\t\t\t\thandleInputChange={(value) => setStaffCodeId(value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"First Name:\"\r\n\t\t\t\tvalue={firstname}\r\n\t\t\t\thandleInputChange={event => setFirstName(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"Last Name:\"\r\n\t\t\t\tvalue={lastname}\r\n\t\t\t\thandleInputChange={event => setLastName(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"Company Email Address:\"\r\n\t\t\t\tvalue={email}\r\n\t\t\t\thandleInputChange={event => setEmail(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"Password:\"\r\n\t\t\t\tvalue={password}\r\n\t\t\t\thandleInputChange={event => setPassword(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t{ staffCodeId  && firstname && lastname &&\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\tvalue=\"Submit\" \r\n\t\t\t\t\tonClick={onSubmitNewStaff}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</form>\r\n\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default AddNewStorageLocation;","import React, { useState } from 'react';\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport TextInput from '../components/TextInput/TextInput';\r\n\r\nimport { \r\n\tuseAddAssetMutation,\r\n\tuseGetAssetListsQuery,\r\n\t } \r\n\t from '../api/apiAssetSlice';\r\n\r\n\r\nconst AddNewAccessory = () => {\r\n\tconst [accType, setAccType] = useState('');\r\n\tconst [make, setMake] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\tconst {data: assetlists, isSuccess } = useGetAssetListsQuery()\r\n\tconst [addAccessorry] = useAddAssetMutation()\r\n\r\n\tconst onSubmitAddAccessory = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst postData = {\r\n\t\t\tasset_type: 'accessory',\r\n\t\t\tasset: {\r\n\t\t\t\tmake: make,\r\n\t\t\t\taccessory_type: accType,\r\n\t\t\t\tdescription: description\r\n\t\t\t},\r\n\t\t\ttransfer_date: new Date()\r\n\t\t};\r\n\r\n\t\tconst addAsset = await addAccessorry(postData);\r\n\t\tif(addAsset.error) {\r\n\t\t\talert('There was a problem');\r\n\t\t\tconsole.log(addAsset);\r\n\t\t} else {\r\n\t\t\talert('Asset added');\r\n\t\t\tsetAccType('');\r\n\t\t\tsetMake('');\r\n\t\t\tsetDescription('')\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\t\r\n\t\t\t{ !isSuccess \r\n\t\t\t\t?\r\n \t\t\t\t\t<h1> LOADING </h1>\r\n\t\t\t\t:\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Accessory Type:\"\r\n\t\t\t\t\t\t\tinitial_input={accType}\r\n\t\t\t\t\t\t\tsuggestlist= {assetlists.acc.typeList} \r\n\t\t\t\t\t\t\taddNewEnabled={true}\r\n\t\t\t\t\t\t\thandleInputChange={(value) => setAccType(value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\tlabel=\"Make\"\r\n\t\t\t\t\t\t\tinitial_input={make}\r\n\t\t\t\t\t\t\tsuggestlist= {assetlists.acc.makeList} \r\n\t\t\t\t\t\t\taddNewEnabled={true}\r\n\t\t\t\t\t\t\thandleInputChange={(value) => setMake(value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tlabel=\"Description:\"\r\n\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\thandleInputChange={event => setDescription(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{ accType && make && \r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\t\tvalue=\"Submit\" \r\n\t\t\t\t\t\t\t\tonClick={onSubmitAddAccessory}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</form>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t\t)\t\r\n\t}\r\n\r\nexport default AddNewAccessory;","export const DateFormatter = (date) => {\r\n\tconst month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n\tconst day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n\tconst year = date.getFullYear()\r\n\tconst formatted_date = day + '-' + month + '-' + year\r\n\treturn formatted_date\r\n}\r\n\r\n// Format id from database to coded ID with padding\r\nexport const formatId = (idNumber, code, padding) => {\r\n\tconst paddedID = idNumber.toString().padStart(padding, '0');\r\n\treturn code + paddedID;\r\n}\r\n\r\nexport const parsedLocationId = (location_type_id, location_type) => {\r\n\tconst ID_PADDING = 2;\r\n\tconst paddedID = location_type_id.toString().padStart(ID_PADDING, '0');\r\n\tif(location_type === 'staff') {\r\n\t\treturn 'STAFF' + paddedID;\r\n\t} else if (location_type === 'cabinet' || location_type === 'shelf') {\r\n\t\treturn location_type.slice(0, 3).toUpperCase() + paddedID\r\n\t}\r\n}\r\n\r\n","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst cabinetsApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetCabinetLists: builder.query({\r\n\t\t\tquery: () => '/cabinets/cabinetlists',\r\n\t\t\tprovidesTags: ['Cabinets']\r\n\t\t}),\r\n\t\taddCabinet: builder.mutation({\r\n\t\t\tquery: cabinetData => ({\r\n\t\t\t\turl: '/cabinets/add',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: cabinetData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Cabinets']\r\n\t\t})\r\n\t})\r\n})\r\n\r\nexport const { useGetCabinetListsQuery, useAddCabinetMutation } = cabinetsApi;","import React, { useState, useMemo} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { formatId } from '../utils/utils.js'\r\n\r\nimport { setRoute } from '../components/Navibar/navibarSlice';\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport TextInput from '../components/TextInput/TextInput';\r\n\r\nimport {\r\n\tuseGetCabinetListsQuery,\r\n\tuseAddCabinetMutation\r\n} from '../api/apiCabinetsSlice'\r\n\r\nconst ID_CODE = 'CAB';\r\nconst ID_PADDING = 2\r\n\r\nconst AddNewCabinet = () => {\r\n\tconst [storageID, setStorageID] = useState('');\r\n\tconst [storageLocation, setStorageLocation] = useState('');\r\n\tconst [storageDescription, setStorageDescription] = useState('');\r\n\tconst {data: cabinetlists, isSuccess }  = useGetCabinetListsQuery();\r\n\r\n\tconst [addCabinet] = useAddCabinetMutation();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formattedIds = useMemo(() => {\r\n\t\tif(isSuccess) {\r\n\t\t\treturn cabinetlists.unusedIds.map(id => formatId(id, ID_CODE , ID_PADDING))\r\n\t\t}\r\n\t}, [cabinetlists, isSuccess]);\r\n\r\n\tconst onSubmitNewStaff = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\t//Extract only number id from staff code\r\n\t\tconst cabinet_id = storageID.substring(ID_CODE.length);\r\n\r\n\t\tconst postData = {\r\n\t\t\tcabinet_id: cabinet_id,\r\n\t\t\tlocated: storageLocation,\r\n\t\t\tdescription: storageDescription\r\n\t\t}\r\n\t\tconsole.log(postData)\r\n\t\ttry {\r\n\t\t\tawait addCabinet(postData).unwrap();\r\n\t\t\talert('Cabinet Added');\r\n\t\t\tdispatch(setRoute(''));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t\talert(err);\r\n\t\t}\r\n\t};\r\n\r\nreturn (\r\n\t<div>\t\r\n\t\t<form>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Cabinet ID:\"\r\n\t\t\t\tsuggestlist= {isSuccess ? formattedIds : ['loading']}\r\n\t\t\t\taddNewEnabled={true}\r\n\t\t\t\thandleInputChange={(value) => setStorageID(value)}\r\n\t\t\t\t/>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Location:\"\r\n\t\t\t\tsuggestlist= {isSuccess ? cabinetlists.locatedList : ['loading']}\r\n\t\t\t\taddNewEnabled={true}\r\n\t\t\t\thandleInputChange={(value) => setStorageLocation(value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"Storage Description\"\r\n\t\t\t\tvalue={storageDescription}\r\n\t\t\t\thandleInputChange={event => setStorageDescription(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t{ storageID  && storageLocation && setStorageDescription &&\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\tvalue=\"Submit\" \r\n\t\t\t\t\tonClick={onSubmitNewStaff}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</form>\r\n\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default AddNewCabinet;","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst shelvesApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetShelfLists: builder.query({\r\n\t\t\tquery: () => '/shelves/shelflists',\r\n\t\t\tprovidesTags: ['Shelves']\r\n\t\t}),\r\n\t\taddShelf: builder.mutation({\r\n\t\t\tquery: shelfData => ({\r\n\t\t\t\turl: '/shelves/add',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: shelfData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Shelves']\r\n\t\t})\r\n\t})\r\n})\r\n\r\nexport const { useGetShelfListsQuery, useAddShelfMutation } = shelvesApi;","import React, { useState, useMemo} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { formatId } from '../utils/utils.js'\r\n\r\nimport { setRoute } from '../components/Navibar/navibarSlice';\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport TextInput from '../components/TextInput/TextInput';\r\n\r\nimport {\r\n\tuseGetShelfListsQuery,\r\n\tuseAddShelfMutation\r\n} from '../api/apiShelvesSlice'\r\n\r\nconst ID_CODE = 'SHE';\r\nconst ID_PADDING = 2\r\n\r\nconst AddNewCabinet = () => {\r\n\tconst [storageID, setStorageID] = useState('');\r\n\tconst [storageLocation, setStorageLocation] = useState('');\r\n\tconst [storageDescription, setStorageDescription] = useState('');\r\n\tconst {data: shelflists, isSuccess }  = useGetShelfListsQuery();\r\n\r\n\tconst [addShelf] = useAddShelfMutation();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst formattedIds = useMemo(() => {\r\n\t\tif(isSuccess) {\r\n\t\t\treturn shelflists.unusedIds.map(id => formatId(id, ID_CODE , ID_PADDING))\r\n\t\t}\r\n\t}, [shelflists, isSuccess]);\r\n\r\n\tconst onSubmitNewStaff = async (event) => {\r\n\t\tevent.preventDefault()\r\n\r\n\t\t//Extract only number id from staff code\r\n\t\tconst shelf_id = storageID.substring(ID_CODE.length);\r\n\r\n\t\tconst postData = {\r\n\t\t\tshelf_id: shelf_id,\r\n\t\t\tlocated: storageLocation,\r\n\t\t\tdescription: storageDescription\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tawait addShelf(postData).unwrap();\r\n\t\t\talert('Shelf Added');\r\n\t\t\tdispatch(setRoute(''));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t\talert(err);\r\n\t\t}\r\n\t};\r\n\r\nreturn (\r\n\t<div>\t\r\n\t\t<form>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Shelf ID:\"\r\n\t\t\t\tsuggestlist= {isSuccess ? formattedIds : ['loading']}\r\n\t\t\t\taddNewEnabled={true}\r\n\t\t\t\thandleInputChange={(value) => setStorageID(value)}\r\n\t\t\t\t/>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Location:\"\r\n\t\t\t\tsuggestlist= {isSuccess ? shelflists.locatedList : ['loading']}\r\n\t\t\t\taddNewEnabled={true}\r\n\t\t\t\thandleInputChange={(value) => setStorageLocation(value)}\r\n\t\t\t\t/>\r\n\t\t\t<TextInput\r\n\t\t\t\tlabel=\"Storage Description\"\r\n\t\t\t\tvalue={storageDescription}\r\n\t\t\t\thandleInputChange={event => setStorageDescription(event.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t{ storageID  && storageLocation && setStorageDescription &&\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\tvalue=\"Submit\" \r\n\t\t\t\t\tonClick={onSubmitNewStaff}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</form>\r\n\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default AddNewCabinet;","import React, { useState } from 'react';\r\n\r\nimport AddNewAsset from '../pages/AddNewAsset.js';\r\nimport AddNewStaff from '../pages/AddNewStaff';\r\nimport AddNewAccessory from '../pages/AddNewAccessory';\r\nimport AddNewCabinet from '../pages/AddNewCabinet';\r\nimport AddNewShelf from '../pages/AddNewShelf'\r\n\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\n\r\n\r\nconst Add = () => {\r\n\tconst [addValue, setAddValue] = useState('');\r\n\tconst [addList] = useState(['Asset', 'Cabinet', 'Shelf' ,'Staff', 'Accessory']);\r\n\r\n\tconst onAddSelect = (input_value) => {\r\n\t\tsetAddValue(input_value);\r\n\t};\r\n\r\n\tconst returnAddType = (addType) => {\r\n\t\tswitch (addType){\r\n\t\t\tcase \"Asset\":\r\n\t\t\t\treturn <AddNewAsset/>\r\n            case \"Cabinet\":\r\n             \treturn <AddNewCabinet/>\r\n            case \"Shelf\":\r\n             \treturn <AddNewShelf/>\r\n            case \"Staff\":\r\n             \treturn <AddNewStaff/>\r\n            case \"Accessory\":\r\n             // Todo Create Add Accessory Page\r\n             \treturn <AddNewAccessory/>\r\n\t\t\tdefault:\r\n\t\t\t\treturn <div></div>\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className=\"\">\r\n\t\t\t\t<SuggestBox \r\n\t\t\t\t\tlabel=\"Add\"\r\n\t\t\t\t\thandleInputChange={onAddSelect} \r\n\t\t\t\t\tsuggestlist={addList} />\r\n\t\t\t</form>\r\n\t\t\t{returnAddType(addValue)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Add","import React, { useState, useEffect } from 'react'\r\n\r\nimport SuggestBox from '../SuggestBox/SuggestBox';\r\nimport TextInput from '../TextInput/TextInput'\r\n\r\n\r\nconst ViewEditField = ({input_type, asset_type, serial, suggestlist, label, value, data_field, handleEdit}) => {\r\n\t// Editable data fields on View/Edit page\r\n\tconst [ editOpen, setEditOpen ] = useState(false);\r\n\tconst [ editValue, setEditValue ] = useState(value);\r\n\r\n\t// Close edit if different stock item is selected and clear edit value\r\n\tuseEffect(() => {\r\n\t\tsetEditOpen(false)\r\n\t\t// setEditValue('')\r\n\t}, [serial])\r\n\r\n\r\n\tconst onSubmitEdit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!editValue) {\r\n\t\t\talert(`Select a new ${label}  value.`);\r\n\t\t} else {\r\n\t\t\thandleEdit(data_field, editValue);\r\n\t\t\tsetEditOpen(false);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=''>\r\n\t\t{ !editOpen \r\n\t\t\t?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span className=\"dib w4 pr5 mv2\">{label}</span>\r\n\t\t\t\t\t<span className=\"dib w-40\">{value}</span>\r\n\t\t\t\t\t<button className=\"link dim gray f6 f5-ns mr3 mv2 pointer\" href=''\r\n\t\t\t\t\t\tonClick={() => setEditOpen(true)}>\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t: \r\n\t\t\t\tinput_type === 'suggest' \r\n\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<form className=\"bg-light-silver\">\r\n\t\t\t\t\t\t\t{console.log(suggestlist)}\r\n\t\t\t\t\t\t\t\t<SuggestBox \r\n\t\t\t\t\t\t\t\t\tinitial_input={value}\r\n\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\tsuggestlist={suggestlist} \r\n\t\t\t\t\t\t\t\t\taddNewEnabled={true}\r\n\t\t\t\t\t\t\t\t\thandleInputChange={input_value => setEditValue(input_value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"mr2\"\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Submit Edit'\r\n\t\t\t\t\t\t\t\t\t\tid='test'\r\n\t\t\t\t\t\t\t\t\t\tonClick={event => onSubmitEdit(event)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Cancel Edit'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditOpen(false)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<form className=\"bg-light-silver\">\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\t\t\t\tvalue={editValue}\r\n\t\t\t\t\t\t\t\t\t\thandleInputChange={event => setEditValue(event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"mr2\"\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Submit Edit'\r\n\t\t\t\t\t\t\t\t\t\tid='test'\r\n\t\t\t\t\t\t\t\t\t\tonClick={event => onSubmitEdit(event)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\tvalue='Cancel Edit'\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setEditOpen(false)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ViewEditField","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst locationsApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetAllLocations: builder.query({\r\n\t\t\tquery: () => '/locations/all',\r\n\t\t\tprovidesTags: ['Locations']\r\n\t\t}),\r\n\t\tgetLocationLists: builder.query({\r\n\t\t\tquery: () => '/locations/locationslists',\r\n\t\t\tprovidesTags: ['Locationlists']\r\n\t\t}),\r\n\t\tgetOneLocation: builder.query({\r\n\t\t\tquery: (location_id) => `/locations/${location_id}`,\r\n\t\t\tprovidesTags: ['Location']\r\n\t\t}),\r\n\t})\r\n});\r\n\r\nexport const { \r\n\tuseGetAllLocationsQuery,\r\n\tuseGetLocationListsQuery,\r\n\tuseGetOneLocationQuery\r\n} = locationsApi;\r\n\r\n","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst transfersApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetAssetTransfers: builder.query({\r\n\t\t\tquery: (serialnumber) => `/transfers/asset/${serialnumber}`,\r\n\t\t\tprovidesTags: ['Transfers']\r\n\t\t}),\r\n\t\taddAssetTransfer: builder.mutation({\r\n\t\t\tquery: transferData => ({\r\n\t\t\t\turl: '/transfers/add',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: transferData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Transfers', 'Asset', 'Accessory', 'Onestaff', 'Cabinets', 'Shelves']\r\n\t\t}),\r\n\t})\r\n})\r\n\r\nexport const { useGetAssetTransfersQuery, useAddAssetTransferMutation } = transfersApi;","import React, { useState, useEffect } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { parsedLocationId } from '../../utils/utils.js'\r\n\r\nimport SuggestBox from '../SuggestBox/SuggestBox';\r\n\r\nimport {useGetAllLocationsQuery} from '../../api/apiLocationsSlice';\r\nimport {useAddAssetTransferMutation} from '../../api/apiTransfersSlice';\r\n\r\nconst AssetTransferForm = ({asset_id, close_transfer}) => {\r\n\tconst [locationListObj, setLocationListObj] = useState([]);\r\n\tconst [transferTo, setTransferTo] = useState('');\r\n\tconst [transferDate, setTransferDate] = useState(new Date());\r\n\r\n\tconst {data: locations, isSuccess} = useGetAllLocationsQuery();\r\n\r\n\tconst [addAssetTransfer] = useAddAssetTransferMutation()\r\n\r\n\tuseEffect(() => {\r\n\t\tif(isSuccess && locations) {\r\n\t\t\t// object with parsed location id and location detail as keys and location_id used for submitting transfer as values\r\n\t\t\tconst LocationSelectorListObj = {};\r\n\r\n\t\t\tlocations.forEach(location => {\r\n\t\t\t\tconst selectorValue = parsedLocationId(location.location_type_id, location.location_type) + ': ' + location.location_detail;\r\n\t\t\t\tconst locationId = location.location_id\r\n\t\t\t\tLocationSelectorListObj[selectorValue] = locationId \r\n\t\t\t})\r\n\r\n\t\t\tsetLocationListObj(LocationSelectorListObj)\r\n\t\t}\r\n\t}, [isSuccess, locations])\r\n\r\n\tconst onCaptureTransfer = async(event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst transferData = {\r\n\t\t\tasset_id: asset_id,\r\n\t\t\tlocation_id: locationListObj[transferTo],\r\n\t\t\ttransfer_date: transferDate\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst addTransfer = await addAssetTransfer(transferData);\r\n\t\t\tclose_transfer();\r\n\t\t\tif(addTransfer.error) {\r\n\t\t\t\treturn alert(addTransfer.error.data);\r\n\t\t\t}\r\n\t\t\talert('Transfer Successful');\r\n\t\t} catch(err) {\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className='bg-light-silver'>\r\n\t\t\t\t<SuggestBox \r\n\t\t\t\t\tlabel=\"Transfer To\"\r\n\t\t\t\t\tsuggestlist={Object.keys(locationListObj)}\r\n\t\t\t\t\thandleInputChange={selected => setTransferTo(selected)}\r\n\t\t\t\t/>\r\n\t\t\t\t<label className=\"dib w4 pr5 mv2\"> Transfer Date: </label>\r\n\t\t\t\t\t<div className=\"dib\">\r\n\t\t\t\t\t\t<DatePicker \r\n\t\t\t\t\t\t\tselected={transferDate} \r\n\t\t\t\t\t\t\tonChange={(date) => setTransferDate(date)} /><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"db\"\r\n\t\t\t\t\ttype='submit'\r\n\t\t\t\t\tvalue='Capture'\r\n\t\t\t\t\tonClick={onCaptureTransfer}\r\n\t\t\t\t/>\r\n\t\t\t</form>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AssetTransferForm;","import React, { useState} from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ViewEditField from '../ViewEditField/ViewEditField'\r\nimport AssetTransferForm from '../AssetTransferForm/AssetTransferForm'\r\n\r\n\r\nimport { \r\n\tuseGetOneAssetQuery,\r\n\tuseGetAssetListsQuery,\r\n\tuseEditAssetMutation\r\n\t } \r\n\t from '../../api/apiAssetSlice';\r\n\r\nconst AssetCard = ({getStockItemDetails, update, setUpdate }) => {\r\n\tconst [moveOpen, setMoveOpen] = useState(false);\r\n\r\n\tconst serial_number = useSelector(state => state.asset.serial)\r\n\r\n\tconst {data:asset, isSuccess, refetch} = useGetOneAssetQuery(serial_number);\r\n\tconst {data:suggestlists} = useGetAssetListsQuery();\r\n\tconst [editAsset] = useEditAssetMutation();\r\n\r\n\tconst handleEdit = async (data_field, editvalue) => {\r\n\t\tconst editData = {\r\n\t\t\tasset_type: asset.asset_type,\r\n\t\t\tserialnumber: serial_number,\r\n\t\t\tpayload: {\r\n\t\t\t\t[data_field]: editvalue\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tawait editAsset(editData).unwrap();\r\n\t\t\trefetch()\r\n\t\t} catch(err) { \r\n\t\t\talert(err.data.detail);\r\n\t\t}\r\n\t}\r\n\r\n\tconst closeTransfer = () => {\r\n\t\tsetMoveOpen(false)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=''>\r\n\t\t\t{!isSuccess\r\n\t\t\t\t?\r\n\t\t\t\t\t<h1>LOADINNG</h1>\r\n\t\t\t\t: \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3 className=\"bb\"> Asset Details </h3>\r\n\t\t\t\t\t\t<ViewEditField\r\n\t\t\t\t\t\t\tinput_type='suggest'\r\n\t\t\t\t\t\t\tasset_type={asset?.asset_type}\r\n\t\t\t\t\t\t\tserial={serial_number}\r\n\t\t\t\t\t\t\tsuggestlist={suggestlists?.[asset?.asset_type]?.makeList}\r\n\t\t\t\t\t\t\tlabel= 'Make:'\r\n\t\t\t\t\t\t\tvalue={asset?.make}\r\n\t\t\t\t\t\t\tdata_field='make'\r\n\t\t\t\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t\t<ViewEditField\r\n\t\t\t\t\t\t\tinput_type='suggest'\r\n\t\t\t\t\t\t\tasset_type={asset?.asset_type}\r\n\t\t\t\t\t\t\tserial={serial_number}\r\n\t\t\t\t\t\t\tsuggestlist={suggestlists?.[asset?.asset_type]?.modelList}\r\n\t\t\t\t\t\t\tlabel= 'Model:'\r\n\t\t\t\t\t\t\tvalue={asset?.model}\r\n\t\t\t\t\t\t\tdata_field='model'\r\n\t\t\t\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ViewEditField\r\n\t\t\t\t\t\t\tinput_type='suggest'\r\n\t\t\t\t\t\t\tasset_type={asset?.asset_type}\r\n\t\t\t\t\t\t\tserial={serial_number}\r\n\t\t\t\t\t\t\tsuggestlist={suggestlists?.[asset?.asset_type]?.conditionList}\r\n\t\t\t\t\t\t\tlabel= 'Condition:'\r\n\t\t\t\t\t\t\tvalue={asset?.asset_condition}\r\n\t\t\t\t\t\t\tdata_field='asset_condition'\r\n\t\t\t\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ViewEditField\r\n\t\t\t\t\t\t\tinput_type='text'\r\n\t\t\t\t\t\t\tasset_type={asset?.asset_type}\r\n\t\t\t\t\t\t\tserial={serial_number}\r\n\t\t\t\t\t\t\tlabel= 'Serial:'\r\n\t\t\t\t\t\t\tvalue={asset?.serialnumber}\r\n\t\t\t\t\t\t\tdata_field='serialnumber'\r\n\t\t\t\t\t\t\thandleEdit={handleEdit}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span className=\"dib w4 pr5 mv2\">Location:</span><span>{asset?.location}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{moveOpen \r\n\t\t\t\t\t\t?\t\r\n\t\t\t\t\t\t\t<AssetTransferForm\r\n\t\t\t\t\t\t\t\tasset_id={asset?.asset_id}\r\n\t\t\t\t\t\t\t\tclose_transfer={closeTransfer}\r\n\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t<button \r\n                                className=\"mt3\"\r\n\t\t\t\t\t\t\t\tonClick={() => setMoveOpen(true)}\r\n\t\t\t\t\t\t\t\t>Capure Stock Movement</button>\r\n\t\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AssetCard;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { DateFormatter } from '../../utils/utils';\r\n\r\nimport {useGetAssetTransfersQuery } from '../../api/apiTransfersSlice';\r\nimport { setViewEditPage } from '../../containers/ViewEdit/viewEditSlice.js';\r\nimport { setLocationId } from '../LocationCard/locationCardSlice.js';\r\nimport { setStaffId } from '../StaffCard/staffCardSlice.js'\r\n\r\nconst AssetMovementTable = ({ serialnumber, deleteMovement }) => {\r\n\tconst {data: transferslist, isSuccess } = useGetAssetTransfersQuery(serialnumber);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onRowClick = (transfer) => {\r\n\t\tconsole.log(transfer)\r\n\t\tif(transfer.location_type === 'staff') {\r\n\t\t\tdispatch(setViewEditPage('Staff'))\r\n\t\t\tdispatch(setStaffId((transfer.location.substr(5,2))))\r\n\t\t} else {\r\n\t\t\tdispatch(setViewEditPage('Location'))\r\n\t\t\tdispatch(setLocationId((transfer.location.substr(0,5))))\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<h3  className=\"bb\">Asset Transfers</h3>\r\n\t\t\t{!isSuccess \r\n\t\t\t\t?\r\n\t\t\t\t\t<h1>LOADING</h1>\r\n\t\t\t\t: \r\n\t\t\t\t\t<div className=\"overflow-auto\">\r\n\t\t\t\t\t    <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t\t\t    <thead>\r\n\t\t\t\t\t\t      \t<tr className=\"stripe-dark\">\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Transferred To</th>\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Transfer Date</th>\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Capture Date</th>\r\n\t\t\t\t\t      \t \t</tr>\r\n\t\t\t\t\t      \t</thead>\r\n\t\t\t\t\t      \t<tbody className=\"lh-copy\">\t\t\r\n\t\t\t    \t\t\t\t{transferslist.map((transfer,i) => {\r\n\t\t\t\t\t\t\t\t\tconst parsedTransferDate = DateFormatter(new Date(transfer.transfer_date));\r\n\t\t\t\t\t\t\t\t\tconst parsedCaptureDate = DateFormatter(new Date(transfer.capture_time));\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr \r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"stripe-dark\" \r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => onRowClick(transfer) }>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{transfer.location}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{parsedTransferDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{parsedCaptureDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fw6 bold link dim  pointer pr2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteMovement()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>x</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AssetMovementTable;","import { useDispatch } from 'react-redux';\r\n\r\nimport { setAsset } from '../AssetCard/assetCardSlice'\r\n\r\nimport { useGetTypeAssetsQuery } from '../../api/apiAssetSlice';\r\n\r\nconst AssetTypeList = ({asset_type, set_serial}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {data: assets, isSuccess } = useGetTypeAssetsQuery(asset_type);\r\n\r\n    return(\r\n        <div className=\"pa2\">\r\n            <h3 className=\"z-0\">{asset_type.toUpperCase()}</h3>\r\n\r\n            {!isSuccess \r\n                ?\r\n                    <h1>LOADING</h1>\r\n                : \r\n                    <div className=\"overflow-visible\">\r\n                        <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n                            <thead className=\"pt\">\r\n                                <tr className=\"stripe-dark\">\r\n                                    <th className=\"fw6 tl pa2 bg-white\">Serial</th>                        \r\n                                    <th className=\"fw6 tl pa2 bg-white\">Model</th>\r\n                                    <th className=\"fw6 tl pa2 bg-white\">Location</th>                            \r\n                                    <th className=\"fw6 tl pa2 bg-white\">Condition</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"lh-copy\">\r\n                                {assets.map((asset,i) => {\r\n                                    return (                            \t\r\n                                        <tr\r\n                                            className=\"stripe-dark pointer\"\r\n                                            key={i}\r\n                                            onClick={event => dispatch(setAsset(asset.serialnumber))}>\r\n                                                <td className=\"pa1\">{asset.serialnumber}</td>\r\n                                                <td className=\"pa1\">{asset.model}</td>\r\n                                                <td className=\"pa1\">{asset.location}</td>\r\n                                                <td className=\"pa1\">{asset.asset_condition}</td>\r\n                                            </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssetTypeList;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport AssetCard from '../components/AssetCard/AssetCard';\r\nimport AssetMovementTable from '../components/AssetMovementTable/AssetMovementTable';\r\nimport AssetTypeList from '../components/AssetTypeList/AssetTypeList'\r\n\r\nimport { setAsset } from '../components/AssetCard/assetCardSlice'\r\nimport { useGetAssetListsQuery}  from '../api/apiAssetSlice';\r\n\r\nconst ASSET_TYPES = ['Laptop', 'Monitor', 'Modem', 'Cellphone' , 'PC', 'Tablet', 'Misc']\r\n\r\nconst ViewEditAsset = () => {\r\n\tconst [assetType, setAssetType] = useState('');\r\n\tconst [serialList, setSerialList] = useState([]);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst serial = useSelector(state => state.asset.serial)\r\n\r\n\t// Increase update state +1 to rerun fetch and update values\r\n\tconst [update, setUpdate] = useState(0)\r\n\r\n\tconst {data: assetlists, isSuccess} = useGetAssetListsQuery();\r\n\r\n\tuseEffect(() => {\r\n\t\t// set serial list based on asset type selected\r\n\t\tif(isSuccess && assetlists[assetType.toLowerCase()]) {\r\n\t\t\tconst  { serialList } = assetlists[assetType.toLowerCase()]\r\n\t\t\tsetSerialList(serialList)\r\n\t\t}\r\n\t}, [isSuccess, assetType, assetlists])\r\n\r\n\r\n\tconst selectAssetType = (assetType) => {\r\n\t\tsetAssetType(assetType);\r\n\t\tdispatch(setAsset(''));\r\n\t}\r\n\r\n\t// To be Re-Implemented\r\n   \tconst deleteMovement = (movement_id) => {\r\n\t\treturn\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className=\"\">\r\n\t\t\t\t<SuggestBox \r\n\t\t\t\t\tlabel=\"Asset Type:\"\r\n\t\t\t\t\tsuggestlist={ASSET_TYPES}\r\n\t\t\t\t\thandleInputChange={input_value => selectAssetType(input_value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<SuggestBox \r\n\t\t\t\t\tlabel=\"Search Serials:\"\r\n\t\t\t\t\tsuggestlist={serialList}\r\n\t\t\t\t\thandleInputChange={input_value => dispatch(setAsset((input_value)))}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t\t{assetType && !serial && \r\n\t\t\t\t<AssetTypeList\r\n\t\t\t\t\tasset_type={assetType.toLowerCase()}\r\n\t\t\t\t/>}\r\n\t\t\t{serial &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<AssetCard\r\n\t\t\t\t\t\tserial_number={serial}\r\n\t\t\t\t\t\t// getStockItemDetails={getStockItemDetails}\r\n\t\t\t\t\t\tupdate={update}\r\n\t\t\t\t\t\tsetUpdate={setUpdate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AssetMovementTable\r\n\t\t\t\t\t\tserialnumber = {serial}\r\n\t\t\t\t\t\tdeleteMovement={deleteMovement}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewEditAsset;\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst AssetList = ({ asset_list }) => {\r\n\treturn(\r\n\t\t<div className=\"\">\r\n\t\t\t{asset_list.length === 0\r\n\t\t\t\t? \r\n\t\t\t\t\t<div><h3 className=\"tc\"> No Assets</h3></div> \r\n\t\t\t\t:\r\n\t\t\t\t\t<div className=\"overflow-auto\">\r\n\t\t\t\t\t    <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t\t\t    <thead>\r\n\t\t\t\t\t\t      \t<tr className=\"stripe-dark\">\r\n\t\t\t\t\t\t      \t \t<th className=\"tl pa2 bg-white\">Serialnumber</th>\t\t\t\t      \t\r\n\t\t\t\t\t\t      \t \t<th className=\"tl pa2 bg-white\">Type</th>\r\n\t\t\t\t\t\t      \t \t<th className=\"tl pa2 bg-white\">Model</th>\r\n\t\t\t\t\t\t     \t\t<th className=\"tl pa2 bg-white\">Transferred</th>\r\n\t\t\t\t\t      \t \t</tr>\r\n\t\t\t\t\t      \t</thead>\r\n\t\t\t\t\t      \t<tbody className=\"lh-copy\">\t\t\r\n\t\t\t    \t\t\t\t{asset_list.map((asset,i) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr \r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"stripe-dark\" \r\n\t\t\t\t\t\t\t\t\t\t\tkey={'movement ' + i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={event => console.log(asset)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{asset.serialnumber}</td>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{asset.asset_type.toUpperCase()}</td>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{asset.model}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{asset.transfer_date}</td>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AssetList;","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { setAccessory } from '../AccessoryCard/accessoryCardSlice';\r\nimport { setViewEditPage } from '../../containers/ViewEdit/viewEditSlice'\r\n\r\nconst LocationAccessoryList = ({accessory_list}) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst selectAccessory = (acc_id) => {\r\n\t\tdispatch(setAccessory(acc_id))\r\n\t\tdispatch(setViewEditPage('Accessories'))\r\n\t}\r\n\r\n    return(\r\n    \t<div className=\"\">\r\n        \t{accessory_list.length === 0\r\n        \t\t?\r\n\t\t\t\t\t<div><h3 className=\"tc\"> No Accessories</h3></div> \r\n            \t:\r\n\t\t\t        <div className=\"overflow-visible\">        \t\t\r\n\t\t\t            <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t                <thead className=\"pt\">\r\n\t\t\t                    <tr className=\"stripe-dark\">\r\n\t\t\t                        <th className=\"fw6 tl pa2 bg-white\">Id</th>                        \r\n\t\t\t                        <th className=\"fw6 tl pa2 bg-white\">Type</th>\r\n\t\t\t                        <th className=\"fw6 tl pa2 bg-white\">Make</th>                            \r\n\t\t\t                        <th className=\"fw6 tl pa2 bg-white\">Transferred</th>\r\n\t\t\t                    </tr>\r\n\t\t\t                </thead>\r\n\t\t\t                <tbody className=\"lh-copy\">     \r\n\t\t\t                    {accessory_list.map((accessory,i) => {\r\n\t\t\t                        return (                            \t\r\n\t\t\t                            <tr \r\n\t\t\t                                className=\"stripe-dark pointer hide-child\" \r\n\t\t\t                                key={'movement ' + i}\r\n\t\t\t                                onClick={event => selectAccessory(accessory?.accessory_id)}>\r\n\t\t\t                                    <td className=\"pa1\">{accessory.parsedid}</td>\r\n\t\t\t                                    {console.log(accessory)}\r\n\t\t\t                                    <td className=\"relative pa1\">{accessory.accessory_type}\r\n\t\t\t                                        <span \r\n\t\t\t                                            className=\"z-8 absolute dib white child bg-black-70 bottom-2 left-4 pa2 cover\"\r\n\t\t\t                                            style={{pointerEvents: \"none\"}}>\r\n\t\t\t                                                {accessory.description ? accessory.description : 'No Description'}\r\n\t\t\t                                        </span></td>                                                \r\n\t\t\t                                    <td className=\"pa1\">{accessory.make}</td>\r\n\t\t\t                                    <td className=\"pa1\">{accessory.transfer_date}</td>    \t\t\t                                                                                 \r\n\t\t\t                            </tr>\r\n\t\t\t                        )\r\n\t\t\t                    })}\r\n\t\t\t                </tbody>\r\n\t            \t\t</table>\r\n            \t    </div>\t\t\t\t\t\r\n        \t}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LocationAccessoryList;\r\n","import React from 'react'\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\n\r\nimport ViewEditField from '../ViewEditField/ViewEditField'\r\nimport AssetList from '../AssetList/AssetList';\r\nimport LocationAccessoryList from '../LocationAccessoryList/LocationAccessoryList';\r\n\r\nimport { useGetOneLocationQuery } from '../../api/apiLocationsSlice'\r\n\r\nconst LocationCard = () => {\r\n\tconst parsed_id = useSelector(state => state.locations.locationId);\r\n\r\n\tconst {data:locationData, isSuccess, refetch} = useGetOneLocationQuery(parsed_id);\r\n\r\n\treturn(\r\n\t\t<div className=''>\r\n\t\t\t{!isSuccess\r\n\t\t\t\t?\r\n\t\t\t\t\t<h1> LOADING </h1>\r\n\t\t\t\t:\r\n\t\t\t\t\t<div className=\"mb4\">\r\n                        <h3 className=\"bb\">Locations Details</h3>\r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Location ID:</span><span>{parsed_id}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Location Type:</span><span>{locationData?.location_type}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Location:</span><span>{locationData?.located}</span>\r\n                        </div>                                                        \r\n                        <h3 className=\"bb\">Assets</h3> \r\n                        <AssetList\r\n                        \tasset_list={locationData?.assets}\r\n                        />\r\n                        <h3 className=\"bb\">Accessories</h3>                     \r\n                        <LocationAccessoryList\r\n                        \taccessory_list={locationData?.accessories}\r\n                        />     \t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LocationCard;","import{ useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport LocationCard from '../components/LocationCard/LocationCard';\r\nimport LocationList from '../components/LocationList/LocationList';\r\n\r\nimport { setLocationId } from '../components/LocationCard/locationCardSlice';\r\nimport { \r\n\tuseGetAllLocationsQuery,\r\n\tuseGetLocationListsQuery\r\n} from '../api/apiLocationsSlice'\r\n\r\nconst ViewEditLocation = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [filteredLocations, setFilteredLocations] = useState([]);\r\n\r\n\tconst parsed_id = useSelector(state => state.locations.locationId)\r\n\r\n\tconst {data:locationList} = useGetLocationListsQuery();\r\n\tconst {data: locations, isSuccess} = useGetAllLocationsQuery();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif(isSuccess) {\r\n\t\t\tsetFilteredLocations(locations);\r\n\t\t}\r\n\t}, [locations, isSuccess]);\r\n\r\n\tconst onLocationSelect = (location) => {\r\n\t\tconst parsed_id = location.substr(0,5);\r\n\t\tdispatch(setLocationId(parsed_id));\r\n   \t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Search Locations:\"\r\n\t\t\t\tsuggestlist={locationList}\r\n\t\t\t\thandleInputChange={onLocationSelect}\r\n\t\t\t/>\r\n\t\t{parsed_id && \r\n\t\t\t<div>\r\n\t\t\t\t<LocationCard/>\r\n\t\t\t</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewEditLocation;\r\n\r\n\r\n","import React from 'react';\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\n\r\nimport ViewEditField from '../ViewEditField/ViewEditField';\r\nimport AssetList from '../AssetList/AssetList';\r\nimport LocationAccessoryList from '../LocationAccessoryList/LocationAccessoryList';\r\n\r\nimport { useGetOneStaffQuery, useEditStaffMutation } from '../../api/apiStaffSlice'\r\n\r\nconst StaffCard = () => {\r\n\tconst staffId = useSelector(state => state.staff.staffId);\r\n\r\n\tconst {data: staffMember, isSuccess, refetch} = useGetOneStaffQuery(staffId);\r\n\tconst [editStaff] = useEditStaffMutation();\r\n\r\n\tconst handleEdit = async (data_field, editvalue) => {\r\n\t\tconst editData = {\r\n\t\t\tstaff_id: staffMember.staff_id,\r\n\t\t\tpayload: {\r\n\t\t\t\t[data_field]: editvalue\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tconst edit = await editStaff(editData).unwrap();\r\n\t\t\t\trefetch();\r\n\t\t\t\talert(edit);\r\n\t\t} catch(err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n       <div className=''>\r\n            {!isSuccess\r\n                ?\r\n                    <h1>LOADINNG</h1>\r\n                : \r\n                    <div className=\"\">\r\n                        <h3 className=\"bb bw2 tc\">Staff Details</h3>\r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Staff ID:</span><span>{(staffMember?.parsed_id)}</span>\r\n                        </div>\r\n                        <ViewEditField\r\n                            input_type='text'\r\n                            asset_type={'staff'}\r\n                            serial={staffMember?.staff_id}\r\n                            label= 'Firstname:'\r\n                            value={staffMember?.firstname}\r\n                            data_field='firstname'\r\n                            handleEdit={handleEdit}\r\n                            />\r\n                        <ViewEditField\r\n                            input_type='text'\r\n                            asset_type={'staff'}\r\n                            serial={staffMember?.staff_id}\r\n                            label= 'Lastname:'\r\n                            value={staffMember?.lastname}\r\n                            data_field='lastname'\r\n                            handleEdit={handleEdit}\r\n                            />\r\n                        <h3 className=\"bb bw2 tc\">Assets</h3> \r\n                        <AssetList\r\n                        \tasset_list={staffMember?.assets}\r\n                        />\r\n                        <h3 className=\"bb bw2 tc\">Accessories</h3>                     \r\n                        <LocationAccessoryList\r\n                        \taccessory_list={staffMember?.acc}\r\n                        />                                                         \r\n                    </div>\r\n\r\n            }      \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default StaffCard","import { useDispatch ,useSelector } from 'react-redux';\r\n\r\nimport SuggestBox from '../components/SuggestBox/SuggestBox';\r\nimport StaffCard from '../components/StaffCard/StaffCard'\r\n\r\nimport { setStaffId } from '../components/StaffCard/staffCardSlice'\r\nimport { \r\n\tuseGetStaffListsQuery,\r\n\t } \r\n\t from '../api/apiStaffSlice';\r\n\r\nconst ViewEditStaff = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst staffId = useSelector(state => state.staff.staffId)\r\n\tconst {data: stafflists} = useGetStaffListsQuery()\r\n\r\n\treturn (\r\n\t\t<div className=\"\">\r\n\t\t\t<SuggestBox \r\n\t\t\t\tlabel=\"Search by Name:\"\r\n\t\t\t\tsuggestlist={stafflists?.staffList}\r\n\t\t\t\thandleInputChange={(staffmember) => dispatch(setStaffId((staffmember.substr(5,2))))}\r\n\t\t\t/>\r\n\t\t{staffId && \r\n\t\t\t<div>\r\n\t\t\t\t<StaffCard/>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewEditStaff;\r\n\r\n\r\n","import { emptySplitApi } from './emptySplitApi';\r\n\r\nconst accessoriesApi = emptySplitApi.injectEndpoints({\r\n\tendpoints: builder => ({\r\n\t\tgetAccessories: builder.query({\r\n\t\t\tquery: () => '/accessories/all',\r\n\t\t\tprovidesTags: ['Accessories']\r\n\t\t}),\r\n\t\tgetOneAccessory: builder.query({\r\n\t\t\tquery: (accid) => `/accessories/one/${accid}`,\r\n\t\t\tprovidesTags: ['Accessory']\r\n\t\t}),\r\n\t\teditAccessory: builder.mutation({\r\n\t\t\tquery: editData => ({\r\n\t\t\t\turl: '/accessories/edit',\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\tbody: editData\r\n\t\t\t}),\r\n\t\t\tinvalidatesTags: ['Accessory']\r\n\t\t})\r\n\r\n\t})\r\n});\r\n\r\nexport const {\r\n\tuseGetAccessoriesQuery,\r\n\tuseGetOneAccessoryQuery,\r\n\tuseEditAccessoryMutation,\r\n} = accessoriesApi;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { setAccessory } from '../AccessoryCard/accessoryCardSlice';\r\n\r\nimport {useGetAccessoriesQuery } from '../../api/apiAccessoriesSlice';\r\n\r\nconst AccessoryList = () => {\r\n    const {data: accessories, isSuccess } = useGetAccessoriesQuery();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return(\r\n        <div className=\"pa2\">\r\n            <h3 className=\"z-0\">Accessories</h3>\r\n            {!isSuccess \r\n                ?\r\n                    <h1>LOADING</h1>\r\n                : \r\n                    <div className=\"overflow-visible\">\r\n                        <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n                            <thead className=\"pt\">\r\n                                <tr className=\"stripe-dark\">\r\n                                    <th className=\"fw6 tl pa2 bg-white\">Id</th>                        \r\n                                    <th className=\"fw6 tl pa2 bg-white\">Type</th>\r\n                                    <th className=\"fw6 tl pa2 bg-white\">Make</th>                            \r\n                                    <th className=\"fw6 tl pa2 bg-white\">Location</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"lh-copy\">     \r\n                                {accessories.map((accessory,i) => {\r\n                                    return (                            \t\r\n                                        <tr \r\n                                            className=\"stripe-dark pointer hide-child\" \r\n                                            key={'movement ' + i}\r\n                                            onClick={event => dispatch(setAccessory(accessory.accessory_id))}>\r\n                                                <td className=\"pa1\">{accessory.acc_id}</td>\r\n                                                <td className=\"relative pa1\">{accessory.accessory_type}\r\n                                                    <span \r\n                                                        className=\"z-8 absolute dib white child bg-black-70 bottom-2 left-4 pa2 cover\"\r\n                                                        style={{pointerEvents: \"none\"}}>\r\n                                                            {accessory.description ? accessory.description : 'No Description'}\r\n                                                    </span></td>                                                \r\n                                                <td className=\"pa1\">{accessory.make}</td>                                             \r\n                                                <td className=\"pa1\">{accessory.location}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccessoryList;","import React from 'react';\r\nimport { DateFormatter } from '../../utils/utils';\r\n\r\nconst AccessoryMovementTable = ({ accessory_id, movements, deleteMovement }) => {\r\n\treturn(\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<h3 className=\"bb\">Transfers</h3>\r\n\t\t\t\t\t<div className=\"overflow-auto\">\r\n\t\t\t\t\t    <table className=\"f7 w-100 mw8 center\" cellSpacing=\"0\">\r\n\t\t\t\t\t\t    <thead>\r\n\t\t\t\t\t\t      \t<tr className=\"stripe-dark\">\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Transferred To</th>\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Transfer Date</th>\r\n\t\t\t\t\t\t      \t \t<th className=\"fw6 tl pa2 bg-white\">Capture Date</th>\r\n\t\t\t\t\t      \t \t</tr>\r\n\t\t\t\t\t      \t</thead>\r\n\t\t\t\t\t      \t<tbody className=\"lh-copy\">\r\n\t\t\t    \t\t\t\t{movements.map((transfer,i) => {\r\n\t\t\t\t\t\t\t\t\tconst parsedTransferDate = DateFormatter(new Date(transfer.transfer_date));\r\n\t\t\t\t\t\t\t\t\tconst parsedCaptureDate = DateFormatter(new Date(transfer.capture_time));\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<tr \r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"stripe-dark\" \r\n\t\t\t\t\t\t\t\t\t\t\tkey={'movement ' + i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={event => console.log(transfer)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{transfer.location}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{parsedTransferDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"pa1\">{parsedCaptureDate}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fw6 bold link dim  pointer pr2\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteMovement()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>x</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AccessoryMovementTable;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport ViewEditField from '../ViewEditField/ViewEditField'\r\nimport AssetTransferForm from '../AssetTransferForm/AssetTransferForm'\r\nimport AccessoryMovementTable from '../AccessoryMovementTable/AccessoryMovementTable.js';\r\n\r\nimport { DateFormatter } from '../../utils/utils';\r\n\r\nimport {useGetOneAccessoryQuery, useEditAccessoryMutation } from '../../api/apiAccessoriesSlice';\r\n\r\nimport { \r\n    useGetAssetListsQuery,\r\n     } \r\n     from '../../api/apiAssetSlice';\r\n\r\nconst AccessoriesCard = () => {\r\n    const [moveOpen, setMoveOpen] = useState(false);\r\n\r\n    const accessory_id  = useSelector(state => state.accessory.accId)\r\n\r\n    const {data: accessory, isSuccess, refetch } = useGetOneAccessoryQuery(accessory_id);\r\n    const {data:suggestlists} = useGetAssetListsQuery();\r\n    const [editAccessory] = useEditAccessoryMutation();\r\n\r\n    const handleEdit = async (data_field, editvalue) => {\r\n        const editData = {\r\n            accessory_id: accessory?.accessory_id,\r\n            payload: {\r\n                [data_field]: editvalue\r\n            }\r\n        }\r\n\r\n        try {\r\n            await editAccessory(editData).unwrap();\r\n            refetch()\r\n        } catch(err) { \r\n            alert(err.data.detail);\r\n        }\r\n    }\r\n\r\n    const closeTransfer = () => {\r\n        setMoveOpen(false)\r\n    }\r\n\r\n    const deleteMovement = () => {\r\n            return\r\n    }\r\n\r\n    return(\r\n        <div className=''>\r\n            {!isSuccess\r\n                ?\r\n                    <h1>LOADINNG</h1>\r\n                : \r\n                    <div>\r\n                        <h3 className=\"bb\"> Accessory Details</h3>\r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Accessory ID:</span><span>{(accessory?.parsed_id)}</span>\r\n                        </div>\r\n                        <ViewEditField\r\n                            input_type='suggest'\r\n                            asset_type={'accessory'}\r\n                            serial={accessory.accessory_id}\r\n                            suggestlist={suggestlists?.acc?.typeList}\r\n                            label= 'Type:'\r\n                            value={accessory?.accessory_type}\r\n                            data_field='accessory_type'\r\n                            handleEdit={handleEdit}\r\n                            />      \r\n                        <ViewEditField\r\n                            input_type='suggest'\r\n                            asset_type={'accessory'}\r\n                            serial={accessory.accessory_id}\r\n                            suggestlist={suggestlists?.acc?.makeList}\r\n                            label= 'Make:'\r\n                            value={accessory?.make}\r\n                            data_field='make'\r\n                            handleEdit={handleEdit}\r\n                            />\r\n                        <ViewEditField\r\n                            input_type='text'\r\n                            asset_type={'accessory'}\r\n                            serial={accessory.accessory_id}\r\n                            label= 'Description:'\r\n                            value={accessory?.description}\r\n                            data_field='description'\r\n                            handleEdit={handleEdit}\r\n                            />     \r\n                        <div>\r\n                            <span className=\"dib w4 pr5 mv2\">Location:</span><span>{(accessory?.location)}</span>\r\n                        </div>                        \r\n                        {moveOpen \r\n                        ?   \r\n                            <AssetTransferForm\r\n                                asset_id={accessory?.asset_id}\r\n                                close_transfer={closeTransfer}\r\n                            /> \r\n                        : \r\n                            <button \r\n                                className=\"mt3\"\r\n                                onClick={() => setMoveOpen(true)}\r\n                                >Capure Stock Movement\r\n                            </button>\r\n                        }\r\n                            <AccessoryMovementTable\r\n                                accessory_id = {accessory?.accessory_id}\r\n                                movements = {accessory?.transfers}\r\n                                deleteMovement={deleteMovement}\r\n                            />               \r\n                    </div>\r\n\r\n                        }\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccessoriesCard;","import React from 'react';\r\nimport { useDispatch ,useSelector } from 'react-redux';\r\n\r\nimport AccessoryList from '../components/AccessoryList/AccessoryList';\r\nimport AccessoryCard from '../components/AccessoryCard/AccessoryCard';\r\nimport AccessoryMovementTable from '../components/AccessoryMovementTable/AccessoryMovementTable.js';\r\n\r\nimport { setAccessory } from '../components/AccessoryCard/accessoryCardSlice';\r\n\r\n\r\nconst ViewAllAccessories = () => {\r\n    const accId = useSelector(state => state.accessory.accId);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteMovement = () => {\r\n        return\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                accId \r\n                ?  \r\n                    <div>\r\n                        <button\r\n                            onClick={(() => dispatch(setAccessory('')))}\r\n                             >BACK\r\n                        </button>\r\n                        <AccessoryCard/>\r\n                    </div>\r\n                :\r\n                    <AccessoryList/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewAllAccessories;","import{ useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SuggestBox from '../../components/SuggestBox/SuggestBox';\r\nimport ViewEditAsset from '../../pages/ViewEditAsset';\r\nimport ViewEditStorage from '../../pages/ViewEditLocation';\r\nimport ViewEditStaff from '../../pages/ViewEditStaff';\r\nimport ViewAllAccessories from '../../pages/ViewAllAccessories'\r\n\r\nimport { setViewEditPage, selectViewEditPage } from './viewEditSlice';\r\n\r\n\r\nconst ViewEdit= () => {\r\n\tconst viewEditValue = useSelector(selectViewEditPage);\r\n\tconst [addList] = useState(['Asset', 'Location', 'Staff', 'Accessories']);\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst onViewEditSelect = (input_value) => {\r\n\t\tdispatch(setViewEditPage(input_value))\r\n\t}\r\n\r\n\tconst returnViewEditType = (view_edit_type) => {\r\n\t\tswitch (view_edit_type){\r\n\t\t\tcase \"Asset\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ViewEditAsset\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase \"Location\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ViewEditStorage\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase \"Staff\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ViewEditStaff\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\tcase \"Accessories\":\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ViewAllAccessories\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\treturn <div></div>;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className=\"\">\r\n\t\t\t\t<SuggestBox \r\n\t\t\t\t\tinitial_input={viewEditValue}\r\n\t\t\t\t\tlabel=\"View/Edit\"\r\n\t\t\t\t\thandleInputChange={onViewEditSelect} \r\n\t\t\t\t\tsuggestlist={addList} />\r\n\t\t\t</form>\r\n\t\t\t{returnViewEditType(viewEditValue)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ViewEdit","const reports = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<a href=\"http://localhost:5000/v1/reports/locationreport\"> test </a>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default reports;","import React from 'react';\r\nimport './App.css';\r\nimport { useSelector } from 'react-redux';\r\nimport Navibar from '../components/Navibar/Navibar';\r\nimport Add from './Add';\r\nimport ViewEdit from './ViewEdit/ViewEdit';\r\nimport Reports from '../pages/Reports';\r\n\r\n\r\nfunction App() {\r\n  const route = useSelector(state => state.route.value)\r\n\r\n  const returnRoute = () => {\r\n    switch(route) {\r\n        case 'add':\r\n            return (\r\n              <Add \r\n                />\r\n            );\r\n        case 'view_edit':\r\n            return (\r\n                <ViewEdit/>\r\n            );\r\n        case 'reports':\r\n            return (\r\n              <Reports/>\r\n            );\r\n        default:\r\n            return(\r\n                <div>CHOOSE</div>\r\n            )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"pa2 pa2-ns center-l center-ns mw6-ns bb relative\">\r\n        <Navibar />\r\n        <div className=\"pt2 ph1-ns mh1\">\r\n          { \r\n            returnRoute()\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}